from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, \
    ReplyKeyboardRemove, WebAppInfo  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from urllib import parse  # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å URL


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ (–≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –≤—ã–≤–æ–¥–∞)
withdraw_ref_menu = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton("–ù–∞ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É", callback_data='withdraw_ref:bank_card')).add(
    InlineKeyboardButton("QIWI", callback_data="withdraw_ref:qiwi"),
    InlineKeyboardButton("–ù–∞ –±–∞–ª–∞–Ω—Å", callback_data="withdraw_ref:balance")
)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Å—Å—ã–ª–∫–∞–º–∏ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ
about = InlineKeyboardMarkup(row_width=2).add(InlineKeyboardButton("üì¢–ö–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞", url="https://t.me/NeuronAgent"),
                                              InlineKeyboardButton("üÜò–ü–æ–º–æ—â—å", url="https://t.me/NeuronSupportBot"))


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö)
cancel = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1).add(KeyboardButton("–û—Ç–º–µ–Ω–∞"))


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ (–ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ)
top_up_balance = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("üí∞–í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ", callback_data="buy_sub"))


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
partner = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("‚ÜóÔ∏è–ü–µ—Ä–µ–π—Ç–∏ –∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url="https://t.me/NeuronAgent"),
    InlineKeyboardButton("‚úÖ–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_sub"))


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
back_to_choose = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="back_to_choose_balance"))


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å ChatGPT)
clear_content = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥", callback_data="clear_content"))


# –Ø–∑—ã–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
lang_text = {"en": "ENG", "ru": "RUS"}


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ChatGPT
def get_chat_gpt_keyboard(lang, from_msg):

    return InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("–†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ", callback_data="chatgpt_about_me"),
        InlineKeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å ChatGPT", callback_data="chatgpt_settings")
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞, —Å–º–µ–Ω–∞ —è–∑—ã–∫–∞, —Å–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫)
def get_account(lang, from_msg):

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("üí∞–í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ", callback_data="buy_sub"),
        InlineKeyboardButton(f"–û—Ç–≤–µ—Ç—ã ChatGPT: {lang_text[lang]}", callback_data=f"change_lang:{lang}:{from_msg}"),
        InlineKeyboardButton("–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ChatGPT", callback_data="reset_chatgpt_settings")
    )


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ MidJourney)
def get_try_prompt(ai_type):

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("üîÑ –î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data=f"try_prompt:{ai_type}"))


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç, —Å –∫–∞–∫–∏–º AI –æ–Ω —Ö–æ—á–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å (ChatGPT –∏–ª–∏ MidJourney)
def get_menu(default_ai):

    if default_ai == "chatgpt":
        return ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(KeyboardButton("üí¨ChatGPT‚úÖ"),
                                                                          KeyboardButton("üé®Midjourney"),
                                                                          KeyboardButton("‚öô–ê–∫–∫–∞—É–Ω—Ç"),
                                                                          KeyboardButton("üë®üèª‚Äçüíª–ü–æ–¥–¥–µ—Ä–∂–∫–∞"),
                                                                          KeyboardButton("ü§ù–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"))
    elif default_ai == "image":
        return ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(KeyboardButton("üí¨ChatGPT"),
                                                                          KeyboardButton("üé®Midjourney‚úÖ"),
                                                                          KeyboardButton("‚öô–ê–∫–∫–∞—É–Ω—Ç"),
                                                                          KeyboardButton("üë®üèª‚Äçüíª–ü–æ–¥–¥–µ—Ä–∂–∫–∞"),
                                                                          KeyboardButton("ü§ù–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"))
    else:
        return ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(KeyboardButton("üí¨ChatGPT"),
                                                                          KeyboardButton("üé®Midjourney"),
                                                                          KeyboardButton("‚öô–ê–∫–∫–∞—É–Ω—Ç"),
                                                                          KeyboardButton("üë®üèª‚Äçüíª–ü–æ–¥–¥–µ—Ä–∂–∫–∞"),
                                                                          KeyboardButton("ü§ù–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"))


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ–¥–ø–∏—Å–∫–∏
sub_types = InlineKeyboardMarkup(row_width=3).add(
    InlineKeyboardButton("–ë–∞–∑–æ–≤—ã–π", callback_data="sub_type:base"),
    InlineKeyboardButton("–°—Ç–∞–Ω–¥–∞—Ä—Ç", callback_data="sub_type:standard"),
    InlineKeyboardButton("–ü—Ä–µ–º–∏—É–º", callback_data="sub_type:premium"),
    InlineKeyboardButton("–ò–ª–ª—é—Å—Ç—Ä–∞—Ç–æ—Ä", callback_data="sub_type:illustrator"),
    InlineKeyboardButton("–ê–≤—Ç–æ—Ä", callback_data="sub_type:author"),
)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
def get_pay(user_id, stock=0):

    if stock == 0:
        stock_text = ""
    else:
        stock_text = f" (+{stock}%)"  # –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤—É–µ—Ç –∞–∫—Ü–∏—è –Ω–∞ –±–æ–Ω—É—Å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞
    return InlineKeyboardMarkup(row_width=3).add(
        InlineKeyboardButton("200‚ÇΩ" + stock_text, callback_data="select_amount:200"),
        InlineKeyboardButton("500‚ÇΩ" + stock_text, callback_data="select_amount:500"),
        InlineKeyboardButton("1000‚ÇΩ" + stock_text, callback_data="select_amount:1000")).add(
        InlineKeyboardButton("üí∞–î—Ä—É–≥–∞—è —Å—É–º–º–∞" + stock_text, callback_data="other_amount")).add(
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="back_to_profile")
    )


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã (Tinkoff, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ –∏ —Ç.–¥.)
def get_pay_urls(urls, order_id):

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞", url=urls["tinkoff"]),
        InlineKeyboardButton("–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", web_app=WebAppInfo(url=urls["freekassa"])),
        InlineKeyboardButton("Telegram Stars", callback_data=f"tg_stars:{order_id}"),
        InlineKeyboardButton("–î—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã", web_app=WebAppInfo(url=urls["freekassa"])),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="back_to_profile"))


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Telegram Stars
def get_tg_stars_pay():

    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(InlineKeyboardButton("Telegram Stars", pay=True))  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Telegram
    kb.add(InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data=f"delete_msg"))  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
    return kb


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ (–ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π, –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞)
def get_ref_menu(url):

    text_url = parse.quote(url)  # –ö–æ–¥–∏—Ä—É–µ–º URL
    url = f'https://t.me/share/url?url={text_url}'  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
    return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton('üì©–ü–æ–¥–µ–ª–∏—Ç—Å—è —Å—Å—ã–ª–∫–æ–π', url=url),
                                                 InlineKeyboardButton('üí≥–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤',
                                                                      callback_data='withdraw_ref_menu'),
                                                 InlineKeyboardButton('üîô–ù–∞–∑–∞–¥', callback_data='check_sub'))


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–≤–∞—Ä–∏–∞—Ü–∏–∏, –∑—É–º –∏ —Ç.–¥.)
def get_try_prompt_or_choose(task_id, include_try=False):

    kb = InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("u1", callback_data=f"choose_image:{task_id}:1"),
        InlineKeyboardButton("u2", callback_data=f"choose_image:{task_id}:2"),
        InlineKeyboardButton("u3", callback_data=f"choose_image:{task_id}:3"),
        InlineKeyboardButton("u4", callback_data=f"choose_image:{task_id}:4"))
    if include_try:
        kb.add(InlineKeyboardButton("üîÑ –ï—â—ë –≤–∞—Ä–∏–∞–Ω—Ç—ã", callback_data=f"try_prompt:image"))  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
    return kb


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–≤–∞—Ä–∏–∞—Ü–∏—è, –∑—É–º –∏ —Ç.–¥.)
def get_choose(task_id):

    return InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("ü™Ñ Vary (Subtle)", callback_data=f"change_image:vary:low:{task_id}"),
        InlineKeyboardButton("ü™Ñ Vary (Strong)", callback_data=f"change_image:vary:high:{task_id}"),
        InlineKeyboardButton("üîç Zoom Out 2x", callback_data=f"change_image:zoom:2:{task_id}"),
        InlineKeyboardButton("üîç Zoom Out 1.5x", callback_data=f"change_image:zoom:1.5:{task_id}"))


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–∫–∏–¥–∫–∞—Ö –Ω–∞ –æ–ø–ª–∞—Ç—É
def get_notify_pay(with_discount):

    if with_discount:
        buttons = [
            InlineKeyboardButton("–ë–∞–∑–æ–≤—ã–π", callback_data="sub_type:base:discount"),
            InlineKeyboardButton("–°—Ç–∞–Ω–¥–∞—Ä—Ç", callback_data="sub_type:standard:discount"),
            InlineKeyboardButton("–ü—Ä–µ–º–∏—É–º", callback_data="sub_type:premium:discount"),
            InlineKeyboardButton("–ò–ª–ª—é—Å—Ç—Ä–∞—Ç–æ—Ä", callback_data="sub_type:illustrator:discount"),
            InlineKeyboardButton("–ê–≤—Ç–æ—Ä", callback_data="sub_type:author:discount"),
        ]
    else:
        buttons = [
            InlineKeyboardButton("–ë–∞–∑–æ–≤—ã–π", callback_data="sub_type:base"),
            InlineKeyboardButton("–°—Ç–∞–Ω–¥–∞—Ä—Ç", callback_data="sub_type:standard"),
            InlineKeyboardButton("–ü—Ä–µ–º–∏—É–º", callback_data="sub_type:premium"),
            InlineKeyboardButton("–ò–ª–ª—é—Å—Ç—Ä–∞—Ç–æ—Ä", callback_data="sub_type:illustrator"),
            InlineKeyboardButton("–ê–≤—Ç–æ—Ä", callback_data="sub_type:author"),
        ]
    return InlineKeyboardMarkup(row_width=3).add(
        *buttons
    )


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏
def get_sub_period(sub_type, prices, with_discount):

    btns = []
    for i, price in enumerate(prices):
        callback_data = f"sub_period:{sub_type}:{i}"
        if i != 0 and with_discount:
            callback_data += ":discount"  # –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∫–∏–¥–∫–∞ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
        btns.append(InlineKeyboardButton(text=price["text"], callback_data=callback_data))
    kb = InlineKeyboardMarkup(row_width=1).add(
        *btns,
        InlineKeyboardButton(text="üîô–ù–∞–∑–∞–¥", callback_data="buy_sub")
    )
    return kb


''' –ù–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–∫—É–ø–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è GPT –∏–ª–∏ MJ '''

# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ç–æ–∫–µ–Ω–æ–≤
def get_neural_network_menu():

    return InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("üí¨ChatGPT", callback_data="buy_chatgpt_tokens"),
        InlineKeyboardButton("üé®Midjourney", callback_data="buy_midjourney_requests")
    )


# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è ChatGPT
def get_chatgpt_tokens_menu():

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("100 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, 149‚ÇΩ", callback_data="select_chatgpt_tokens:100000"),
        InlineKeyboardButton("200 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, 249‚ÇΩ (-20%)", callback_data="select_chatgpt_tokens:200000"),
        InlineKeyboardButton("500 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, 449‚ÇΩ (-40%)", callback_data="select_chatgpt_tokens:500000"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="buy_sub")
    )


# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è Midjourney
def get_midjourney_requests_menu():

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("10 –∑–∞–ø—Ä–æ—Å–æ–≤, 149‚ÇΩ", callback_data="select_midjourney_requests:10"),
        InlineKeyboardButton("20 –∑–∞–ø—Ä–æ—Å–æ–≤, 259‚ÇΩ (-13%)", callback_data="select_midjourney_requests:20"),
        InlineKeyboardButton("50 –∑–∞–ø—Ä–æ—Å–æ–≤, 599‚ÇΩ (-19%)", callback_data="select_midjourney_requests:50"),
        InlineKeyboardButton("100 –∑–∞–ø—Ä–æ—Å–æ–≤, 1099‚ÇΩ (-26%)", callback_data="select_midjourney_requests:100"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="buy_sub")
    )
